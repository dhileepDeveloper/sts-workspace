package com.bookservice.client;

import java.net.URI;
import java.util.Date;
import java.util.HashMap;
import java.util.Map;

import org.junit.jupiter.api.Test;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.http.HttpEntity;
import org.springframework.http.HttpMethod;
import org.springframework.http.ResponseEntity;
import org.springframework.web.client.RestTemplate;
import org.springframework.web.util.UriComponentsBuilder;

@SpringBootTest
class BookServiceClientApplicationTests {

	@Autowired
	private RestTemplate restTemplate;
	
	@Test
	public void getBook()
	{
		String ingredientID = "1";
		Book book = restTemplate.getForObject("http://localhost:8081/book/{id}", Book.class,ingredientID);
		System.out.println("Book is " + book);
	}
	
	@Test
	public void getBookWithMap()
	{
		String ingredientID = "1";
		Map<String,String> map = new HashMap<String,String>();
		map.put("id", ingredientID);
		Book book = restTemplate.getForObject("http://localhost:8081/book/{id}", Book.class,map);
		System.out.println("Book is " + book);
	}
	
	@Test
	public void getBookWithURI()
	{
		String ingredientID = "4";
		Map<String,String> map = new HashMap<String,String>();
		map.put("id", ingredientID);
		URI uri = UriComponentsBuilder.fromHttpUrl("http://localhost:8081/book/{id}").build(map);
		Book book = restTemplate.getForObject("http://localhost:8081/book/{id}", Book.class,map);
		System.out.println("Book is " + book);
	}
	
	@Test
	public void getBookEntityWithURI()
	{
		String ingredientID = "2";
		Map<String,String> map = new HashMap<String,String>();
		map.put("id", ingredientID);
		URI uri = UriComponentsBuilder.fromHttpUrl("http://localhost:8081/book/{id}").build(map);
		ResponseEntity<Book> book = restTemplate.getForEntity("http://localhost:8081/book/{id}", Book.class,map);
		System.out.println("---------------------------");
		//System.out.println("Book is " + book.getBody());
		System.out.println("Status is " + book.getStatusCode());
		System.out.println("Header is " + new Date(book.getHeaders().getDate()));
	}
	
	@Test
	public void createBookEntityWithURI()
	{
		Book book = new Book();
		book.setAuthor("Dhileepan");
		book.setName("The legend");
		ResponseEntity entity = restTemplate.postForEntity("http://localhost:8081/book" ,book, Book.class);
		System.out.println("---------------------------");
		System.out.println("Book is " + entity.getBody());
		System.out.println("Status is " + entity.getStatusCode());
	}
	
	@Test
	public void updateBookEntityWithURI()
	{
		Book book = new Book();
		book.setAuthor("JK Rowling");
		book.setName("Harry Potter");
		String ingredientID = "8";
		Map<String,String> map = new HashMap<String,String>();
		map.put("id", ingredientID);
		URI uri = UriComponentsBuilder.fromHttpUrl("http://localhost:8081/book/{id}").build(map);
		restTemplate.put(uri, book);
	}
	
	@Test
	public void deleteBookEntityWithURI()
	{
		Book book = new Book();
		book.setAuthor("JK Rowling");
		book.setName("Harry Potter");
		String ingredientID = "7";
		Map<String,String> map = new HashMap<String,String>();
		map.put("id", ingredientID);
		URI uri = UriComponentsBuilder.fromHttpUrl("http://localhost:8081/book/{id}").build(map);
		restTemplate.delete(uri);
	}
	
	@Test
	public void exchangeBookEntityWithURI()
	{
		Book book = new Book();
		book.setAuthor("Dhileepan");
		book.setName("The legend");
		HttpEntity<Book> httpEntity = new HttpEntity<Book>(book, null);
		ResponseEntity<Book> entity = restTemplate.exchange("http://localhost:8081/book",HttpMethod.POST,httpEntity,Book.class);
		System.out.println("---------------------------");
		System.out.println("Book is " + entity.getBody());
		System.out.println("Status is " + entity.getStatusCode());
	}
}
